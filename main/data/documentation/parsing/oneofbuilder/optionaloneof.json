{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"title":"OneOfBuilder.OptionalOneOf","navigatorTitle":[{"kind":"identifier","text":"OptionalOneOf"}],"modules":[{"name":"Parsing"}],"symbolKind":"struct","externalID":"s:7Parsing12OneOfBuilderO08OptionalbC0V","roleHeading":"Structure","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalOneOf"}]},"variants":[{"paths":["\/documentation\/parsing\/oneofbuilder\/optionaloneof"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/ParserPrinter-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"Wrapped"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"text":"You wonâ€™t typically construct this parser directly, but instead will use standard ","type":"text"},{"code":"if","type":"codeVoice"},{"text":" ","type":"text"},{"text":"statements in a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","isActive":true,"type":"reference"},{"text":" block to automatically build optional parsers:","type":"text"}],"type":"paragraph"},{"code":["let whitespace = OneOf {","  if shouldParseNewlines {","    \"\\r\\n\"","    \"\\r\"","    \"\\n\"","  }","","  \" \"","  \"\\t\"","}"],"syntax":"swift","type":"codeListing"}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf"},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder":{"navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfBuilder","kind":"identifier"}],"title":"OneOfBuilder","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"runs each parser in the closure, one after another, till one succeeds with an output."}],"role":"symbol","url":"\/documentation\/parsing\/oneofbuilder"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf/ParserPrinter-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parserprinter-implementations","kind":"article","type":"topic","title":"ParserPrinter Implementations","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","url":"\/documentation\/parsing\/oneof","kind":"symbol","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"type":"topic","title":"OneOf","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf/parse(_:)":{"url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)","type":"topic","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/parse(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf/Parser-Implementations":{"url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof\/parser-implementations","title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf\/Parser-Implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OptionalOneOf":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof","kind":"symbol","navigatorTitle":[{"text":"OptionalOneOf","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalOneOf","kind":"identifier"}],"type":"topic","title":"OneOfBuilder.OptionalOneOf","abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"title":"ParserPrinter","role":"symbol","type":"topic","kind":"symbol","conformance":{"constraints":[{"code":"Wrapped","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]}}}