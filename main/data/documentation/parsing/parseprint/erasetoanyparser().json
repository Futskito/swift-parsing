{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"An ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","isActive":true},{"text":" wrapping this parser.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This form of ","type":"text"},{"inlineContent":[{"type":"text","text":"type erasure"}],"type":"emphasis"},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When you expose your composed parsers as the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","type":"reference","isActive":true},{"text":" type, you can change the underlying","type":"text"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"AnyParser.init"},{"text":".","type":"text"}]}]}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/eraseToAnyParser()"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations"]]},"metadata":{"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing10ParsePrintV","extendedModule":"Parsing","roleHeading":"Instance Method","modules":[{"name":"Parsing"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":">","kind":"text"}],"title":"eraseToAnyParser()","role":"symbol","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parseprint\/erasetoanyparser()"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"url":"\/documentation\/parsing\/anyparser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/Parser-Implementations":{"title":"Parser Implementations","kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/Parser-Implementations","abstract":[],"url":"\/documentation\/parsing\/parseprint\/parser-implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"title":"ParserBuilder","type":"topic","url":"\/documentation\/parsing\/parserbuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","kind":"symbol","abstract":[{"text":"A custom parameter attribute that constructs parsers from closures. The constructed parser","type":"text"},{"text":" ","type":"text"},{"text":"runs a number of parsers, one after the other, and accumulates their outputs.","type":"text"}],"navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint/eraseToAnyParser()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"title":"eraseToAnyParser()","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"url":"\/documentation\/parsing\/parseprint\/erasetoanyparser()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint\/eraseToAnyParser()","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParsePrint":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParsePrint","url":"\/documentation\/parsing\/parseprint","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParsePrint","kind":"identifier"}],"title":"ParsePrint","type":"topic","abstract":[{"text":"An entry to ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","isActive":true},{"text":" syntax that requires the builder to be a printer.","type":"text"}],"navigatorTitle":[{"text":"ParsePrint","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]}}}