{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)-2aye6","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)-3qeku","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)-54vcy"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/count","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/startsWith"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"roleHeading":"Structure","externalID":"s:7Parsing10StartsWithV","symbolKind":"struct","modules":[{"name":"Parsing"}],"title":"StartsWith","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}]},"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/startswith"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This parser is named after ","type":"text"},{"type":"codeVoice","code":"Sequence.starts(with:)"},{"text":", and tests that the input it is parsing","type":"text"},{"text":" ","type":"text"},{"text":"starts with a given subsequence by calling this method under the hood.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"true"},{"text":", it consumes this prefix and returns ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":":","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"Hello, Blob!\"[...]","","StartsWith(\"Hello, \").parse(&input)  \/\/ ()","input                                \/\/ \"Blob!\""]},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"code":"false","type":"codeVoice"},{"text":", it fails and leaves input intact:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"Goodnight, Blob!\"[...]","try StartsWith(\"Hello, \").parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | Goodnight, Blob!","\/\/   | ^ expected \"Hello, \""]},{"type":"paragraph","inlineContent":[{"text":"This parser returns ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":" and ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"text":" the sequence of elements it consumes because the sequence","type":"text"},{"text":" ","type":"text"},{"text":"is already known at the time the parser is created (it is the value quite literally passed to","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","type":"reference","isActive":true},{"text":").","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"In many circumstances you can omit the ","type":"text"},{"type":"codeVoice","code":"StartsWith"},{"text":" parser entirely and just use the collection","type":"text"},{"text":" ","type":"text"},{"text":"as the parser. For example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["var input = \"Hello, Blob!\"[...]","","try \"Hello, \".parse(&input)  \/\/ ()","input                        \/\/ \"Blob!\""]}]}],"seeAlsoSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"],"generated":true,"title":"Common parsers"}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"type":"topic","title":"Bool","role":"article","kind":"article","abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/bool","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool"},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"title":"Optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if it fails."}],"url":"\/documentation\/parsing\/optionally","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"type":"topic","title":"Many","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"url":"\/documentation\/parsing\/from","title":"From","type":"topic","navigatorTitle":[{"text":"From","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","kind":"symbol","role":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"title":"End","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","abstract":[{"type":"text","text":"A parser that succeeds if the input is empty, and fails otherwise."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"End"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"End"}],"role":"symbol","url":"\/documentation\/parsing\/end"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:by:)-54vcy":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)-54vcy","type":"topic","title":"init(_:by:)","url":"\/documentation\/parsing\/startswith\/init(_:by:)-54vcy","abstract":[],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Ss7Elementa"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Ss7Elementa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"navigatorTitle":[{"text":"First","kind":"identifier"}],"title":"First","abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","type":"topic","url":"\/documentation\/parsing\/first","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"url":"\/documentation\/parsing\/caseiterable","title":"CaseIterable","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","kind":"article","role":"article","abstract":[{"text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a","type":"text"},{"text":" ","type":"text"},{"text":"string.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"type":"topic","title":"Skip","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"url":"\/documentation\/parsing\/skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","navigatorTitle":[{"text":"Skip","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"navigatorTitle":[{"text":"Fail","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","kind":"symbol","url":"\/documentation\/parsing\/fail","abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}],"title":"Fail"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"title":"Rest","url":"\/documentation\/parsing\/rest","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/count":{"url":"\/documentation\/parsing\/startswith\/count","kind":"symbol","type":"topic","abstract":[],"title":"count","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/count","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"count","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"type":"topic","title":"Float","role":"article","kind":"article","abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/float","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"navigatorTitle":[{"text":"FromSubstring","kind":"identifier"}],"title":"FromSubstring","abstract":[],"deprecated":true,"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","type":"topic","url":"\/documentation\/parsing\/fromsubstring","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"type":"topic","title":"Not","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"url":"\/documentation\/parsing\/not","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","navigatorTitle":[{"text":"Not","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:by:)-2aye6":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:SS8UTF8ViewV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/startswith\/init(_:by:)-2aye6","title":"init(_:by:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)-2aye6","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"url":"\/documentation\/parsing\/anyparser","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"role":"symbol","abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","title":"AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"navigatorTitle":[{"text":"Always","kind":"identifier"}],"title":"Always","abstract":[{"text":"A parser that always succeeds with the given value, and does not consume any input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Always","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","type":"topic","url":"\/documentation\/parsing\/always","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"url":"\/documentation\/parsing\/startswith","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartsWith"}],"role":"symbol","title":"StartsWith","abstract":[{"type":"text","text":"A parser that parses a sequence of elements from its input."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","navigatorTitle":[{"kind":"identifier","text":"StartsWith"}],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"url":"\/documentation\/parsing\/lazy\/parse(_:)","title":"parse(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"LazyParser"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","kind":"symbol","role":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"type":"topic","title":"CharacterSet","role":"article","kind":"article","abstract":[{"text":"A parser that consumes the characters contained in a ","type":"text"},{"type":"codeVoice","code":"CharacterSet"},{"text":" from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/characterset","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"navigatorTitle":[{"text":"Peek","kind":"identifier"}],"title":"Peek","abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","type":"topic","url":"\/documentation\/parsing\/peek","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"url":"\/documentation\/parsing\/prefixupto","role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of"},{"type":"text","text":" "},{"type":"text","text":"elements."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixUpTo"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixUpTo"}],"kind":"symbol","title":"PrefixUpTo","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"type":"topic","title":"Int","role":"article","kind":"article","abstract":[{"text":"A parser that consumes an integer from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/int","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int"},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","title":"Newline","abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"url":"\/documentation\/parsing\/newline","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/Parser-Implementations":{"url":"\/documentation\/parsing\/startswith\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/Parser-Implementations","kind":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"deprecated":true,"type":"topic","title":"FromUnicodeScalarView","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/fromunicodescalarview","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","url":"\/documentation\/parsing\/consumed","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"title":"Consumed","type":"topic","abstract":[{"text":"A parser that returns the subsequence of input consumed by another parser.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Consumed"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"kind":"symbol","url":"\/documentation\/parsing\/prefix","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Prefix","kind":"identifier"}],"navigatorTitle":[{"text":"Prefix","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","title":"Prefix","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"type":"topic","title":"UUID","role":"article","kind":"article","abstract":[{"text":"A parser that consumes a ","type":"text"},{"type":"codeVoice","code":"UUID"},{"text":" value from the beginning of a string.","type":"text"}],"url":"\/documentation\/parsing\/uuid","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"url":"\/documentation\/parsing\/whitespace","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A parser that consumes whitespace from the beginning of input."}],"title":"Whitespace","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","navigatorTitle":[{"kind":"identifier","text":"Whitespace"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Whitespace"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrefixThrough"}],"navigatorTitle":[{"kind":"identifier","text":"PrefixThrough"}],"type":"topic","url":"\/documentation\/parsing\/prefixthrough","role":"symbol","title":"PrefixThrough","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Input.Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:)","type":"topic","url":"\/documentation\/parsing\/startswith\/init(_:)","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUTF8View","kind":"identifier"}],"deprecated":true,"type":"topic","title":"FromUTF8View","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/fromutf8view","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","navigatorTitle":[{"text":"FromUTF8View","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Lazy"}],"type":"topic","title":"Lazy","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)"},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"url":"\/documentation\/parsing\/lazy","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","navigatorTitle":[{"kind":"identifier","text":"Lazy"}]},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"title":"String","abstract":[{"text":"A parser that consumes a string literal from the beginning of a string.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","type":"topic","url":"\/documentation\/parsing\/string","kind":"article","role":"article"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/startsWith":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/startsWith","role":"symbol","title":"startsWith","url":"\/documentation\/parsing\/startswith\/startswith","kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"startsWith"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"PrependableCollection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/parsing\/parserprinter","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","title":"ParserPrinter","type":"topic","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/possiblePrefix":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/possiblePrefix","title":"possiblePrefix","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"possiblePrefix"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13AnyCollectionV","text":"AnyCollection"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">"}],"url":"\/documentation\/parsing\/startswith\/possibleprefix","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Digits"}],"url":"\/documentation\/parsing\/digits","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","navigatorTitle":[{"kind":"identifier","text":"Digits"}],"role":"symbol","abstract":[{"type":"text","text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code"},{"type":"text","text":" "},{"type":"text","text":"units."}],"type":"topic","title":"Digits"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/parse(_:)":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/parse(_:)","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/parsing\/startswith\/parse(_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","url":"\/documentation\/parsing\/oneof","kind":"symbol","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"type":"topic","title":"OneOf","abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"navigatorTitle":[{"kind":"identifier","text":"Stream"}],"role":"symbol","type":"topic","title":"Stream","kind":"symbol","abstract":[{"type":"text","text":"A parser that can parse streams of input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Stream"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream","url":"\/documentation\/parsing\/stream"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"title":"Parse","type":"topic","url":"\/documentation\/parsing\/parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","kind":"symbol","abstract":[{"text":"A parser that attempts to run a number of parsers to accumulate their outputs.","type":"text"}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/ParserPrinter-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/ParserPrinter-Implementations","title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/startswith\/parserprinter-implementations","type":"topic","kind":"article","role":"collectionGroup"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith/init(_:by:)-3qeku":{"abstract":[{"type":"text","text":"Initializes a parser that successfully returns "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" when the initial elements of its input"},{"type":"text","text":" "},{"type":"text","text":"are equivalent to the elements in another sequence, using the given predicate as the"},{"type":"text","text":" "},{"type":"text","text":"equivalence test."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith\/init(_:by:)-3qeku","title":"init(_:by:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"PossiblePrefix"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"PossiblePrefix"},{"kind":"text","text":", "},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/startswith\/init(_:by:)-3qeku","type":"topic","kind":"symbol","role":"symbol"}}}