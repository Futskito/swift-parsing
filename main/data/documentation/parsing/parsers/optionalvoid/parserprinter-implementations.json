{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid"]]},"kind":"article","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"metadata":{"title":"ParserPrinter Implementations","role":"collectionGroup","modules":[{"name":"Parsing"}]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print(_:into:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print(into:)"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/print(into:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print(into:)","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"print(into:)","type":"topic","role":"symbol","url":"\/documentation\/parsing\/parsers\/optionalvoid\/print(into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/eraseToAnyParserPrinter()":{"title":"eraseToAnyParserPrinter()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","preciseIdentifier":"s:7Parsing16AnyParserPrinterV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/eraseToAnyParserPrinter()","kind":"symbol","abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid\/erasetoanyparserprinter()"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/print(_:into:)":{"type":"topic","abstract":[],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/optionalvoid\/print(_:into:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"kind":"text","text":"((), "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Wrapped.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid":{"title":"Parsers.OptionalVoid","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OptionalVoid","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid","navigatorTitle":[{"text":"OptionalVoid","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A parser that attempts to run a given void parser, succeeding with void.","type":"text"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/print(_:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"print(_:)","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print(_:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"url":"\/documentation\/parsing\/parsers\/optionalvoid\/print(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OptionalVoid/print()":{"type":"topic","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/parsers\/optionalvoid\/print()","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OptionalVoid\/print()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Input"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"_EmptyInitializable","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"print()"}}}