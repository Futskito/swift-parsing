{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany"},"metadata":{"extendedModule":"Parsing","externalID":"s:7Parsing7ParsersO9OneOfManyV","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"roleHeading":"Structure","role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"modules":[{"name":"Parsing"}],"title":"Parsers.OneOfMany"},"kind":"symbol","sections":[],"abstract":[{"text":"A parser that attempts to run a number of parsers till one succeeds.","type":"text"}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo"}],"variants":[{"paths":["\/documentation\/parsing\/parsers\/oneofmany"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOfMany","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Parsers"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier","text":"Parser"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"You will not typically need to interact with this type directly. Instead you will usually loop"},{"type":"text","text":" "},{"type":"text","text":"over each parser in a builder block:"}],"type":"paragraph"},{"code":["enum Role: String, CaseIterable {","  case admin","  case guest","  case member","}","","let roleParser = OneOf {","  for role in Role.allCases {","    role.rawValue.map { role }","  }","}"],"type":"codeListing","syntax":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations"],"title":"Default Implementations"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parsers","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany\/parsers","title":"parsers","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": [","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"title":"Parsers","type":"topic","url":"\/documentation\/parsing\/parsers","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","kind":"symbol","abstract":[{"text":"A namespace for types that serve as parsers.","type":"text"}],"navigatorTitle":[{"text":"Parsers","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/parse(_:)":{"title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/parse(_:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"}],"role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/Parser-Implementations":{"url":"\/documentation\/parsing\/parsers\/oneofmany\/parser-implementations","role":"collectionGroup","title":"Parser Implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/init(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/init(_:)","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parsers\/oneofmany\/init(_:)","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"([","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":"])","kind":"text"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany/ParserPrinter-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/parsers\/oneofmany\/parserprinter-implementations","kind":"article","title":"ParserPrinter Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/parsing\/parserprinter","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Parsers","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ParserPrinter","type":"codeVoice"},{"text":".","type":"text"}]},"title":"ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/OneOfMany":{"url":"\/documentation\/parsing\/parsers\/oneofmany","role":"symbol","title":"Parsers.OneOfMany","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfMany"}],"navigatorTitle":[{"kind":"identifier","text":"OneOfMany"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/OneOfMany"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]}}}