{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":" "},{"kind":"internalParam","text":"maximum"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}]}],"kind":"declarations"}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:terminator:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/many\/init(atmost:element:terminator:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Parsing"}],"roleHeading":"Initializer","externalID":"s:7Parsing4ManyVAASay6OutputQzGRs_AA6AlwaysVy5InputQzytGRs0_ytRs2_rlE6atMost7element10terminatorACyxAfKq1_ytGSi_xyXEq1_yXEtcfc","extendedModule":"Parsing","platforms":[],"symbolKind":"init","title":"init(atMost:element:terminator:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"Use the initializer that takes a Length (Int or range expression), instead.","type":"text"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atMost:element:terminator:)":{"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:terminator:)","url":"\/documentation\/parsing\/many\/init(atmost:element:terminator:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","abstract":[],"deprecated":true,"title":"init(atMost:element:terminator:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"}],"type":"topic","title":"Many","role":"symbol","kind":"symbol","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"url":"\/documentation\/parsing\/many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","navigatorTitle":[{"text":"Many","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"title":"Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Parser","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]}}}