{"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString\/Conversion-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString\/case(_:)-4xr88","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"modules":[{"name":"Parsing"}],"symbolKind":"method","role":"symbol","externalID":"s:7Parsing10ConversionPAAE4casey9CasePaths0D4PathVyqd_0_qd__Gqd_0_qd__cAHRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO17SubstringToStringV","extendedModule":"Parsing","roleHeading":"Type Method","title":"case(_:)"},"abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"`case`","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Enum","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initializer","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","text":"CasePath","kind":"typeIdentifier","preciseIdentifier":"s:9CasePaths0A4PathV"},{"text":"<","kind":"text"},{"text":"Enum","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Values","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"An embed function where ","type":"text"},{"code":"Values","type":"codeVoice"},{"text":" directly maps to the memory","type":"text"},{"text":" ","type":"text"},{"text":"layout of ","type":"text"},{"code":"Enum","type":"codeVoice"},{"text":", for example the internal, default initializer that is automatically","type":"text"},{"text":" ","type":"text"},{"text":"synthesized for structs.","type":"text"}],"type":"paragraph"}],"name":"embed"}]},{"kind":"content","content":[{"level":2,"anchor":"return-value","type":"heading","text":"Return Value"},{"inlineContent":[{"type":"text","text":"A conversion that can embed the associated values of an enum case into the case,"},{"type":"text","text":" "},{"type":"text","text":"and extract the associated values from the case."}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Useful for transforming the output of a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":" into an enum:"}],"type":"paragraph"},{"syntax":"swift","code":["enum Expression {","  case add(Int, Int)","  ...","}","","let add = ParsePrint(.case(Expression.add)) {","  Int.parser()","  \"+\"","  Int.parser()","}","try add.parse(\"1+2\")  \/\/ Expression.add(1, 2)"],"type":"codeListing"},{"inlineContent":[{"text":"To transform the output of a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"},{"text":" into a struct, see ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString\/memberwise(_:)"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/parsing\/conversions\/substringtostring\/case(_:)-4xr88"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString":{"type":"topic","url":"\/documentation\/parsing\/conversions\/substringtostring","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString","role":"symbol","abstract":[{"text":"A conversion from a substring to a string.","type":"text"}],"title":"Conversions.SubstringToString","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SubstringToString"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"SubstringToString"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString/case(_:)-4xr88":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString\/case(_:)-4xr88","role":"symbol","abstract":[{"type":"text","text":"Converts the associated values of an enum case into the case, and an enum case into its"},{"type":"text","text":" "},{"type":"text","text":"associated values."}],"title":"case(_:)","url":"\/documentation\/parsing\/conversions\/substringtostring\/case(_:)-4xr88","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"url":"\/documentation\/parsing\/conversions","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","title":"Conversions","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString/memberwise(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"memberwise"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Struct"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Struct"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString\/memberwise(_:)","role":"symbol","abstract":[{"type":"text","text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a"},{"type":"text","text":" "},{"type":"text","text":"memberwise initializer."}],"title":"memberwise(_:)","url":"\/documentation\/parsing\/conversions\/substringtostring\/memberwise(_:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/SubstringToString/Conversion-Implementations":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/SubstringToString\/Conversion-Implementations","role":"collectionGroup","abstract":[],"title":"Conversion Implementations","url":"\/documentation\/parsing\/conversions\/substringtostring\/conversion-implementations","kind":"article"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"url":"\/documentation\/casepaths\/casepath","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","title":"CasePath","type":"topic","navigatorTitle":[{"text":"CasePath","kind":"identifier"}],"kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CasePath","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"type":"topic","title":"ParserPrinter","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parserprinter"}}}