{"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing"]]},"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"externalID":"s:7Parsing13AnyConversionV","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyConversion"}],"navigatorTitle":[{"kind":"identifier","text":"AnyConversion"}],"roleHeading":"Structure","title":"AnyConversion","role":"symbol","modules":[{"name":"Parsing"}]},"abstract":[{"type":"text","text":"A type-erased "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/parsing\/anyconversion"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/init(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This conversion forwards its "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","type":"reference"},{"type":"text","text":" and "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","type":"reference"},{"type":"text","text":" methods to an arbitrary"},{"type":"text","text":" "},{"type":"text","text":"underlying conversion having the same "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of the"},{"type":"text","text":" "},{"type":"text","text":"underlying "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","type":"reference"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"AnyConversion"},{"text":" to wrap a conversion whose type has details you don’t want to expose across","type":"text"},{"text":" ","type":"text"},{"text":"API boundaries, such as different modules. When you use type erasure this way, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying conversion over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"AnyConversion"},{"text":" can also be useful for experimenting with ad hoc conversions in a lightweight","type":"text"},{"text":" ","type":"text"},{"text":"manner. One can avoid the upfront ceremony of defining a whole new type and instead create a","type":"text"},{"text":" ","type":"text"},{"text":"“conformance” inline by specifying the ","type":"text"},{"type":"codeVoice","code":"apply"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"unapply"},{"text":" functions directly","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["Prefix { $0.isNumber }","  .map(","    AnyConversion(","      apply: { Int(String($0)) },","      unapply: { String($0)[...] {","    )","  )","","\/\/ vs.","","struct SubstringToInt: Conversion {","  func apply(_ input: Substring) throws -> Int {","    guard let int = Int(String(input)) else {","      struct ConvertingError: Error {}","      throw ConvertingError()","    }","    return int","  }","","  func unapply(_ output: Int) -> Substring {","    String(output)[...]","  }","}","","Prefix { $0.isNumber }","  .map(SubstringToInt())"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If performance is a consideration of your parser-printer, you should avoid "},{"type":"codeVoice","code":"AnyConversion"},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"text","text":"instead create custom types that conform to the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},{"type":"text","text":" protocol."}]}]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion","url":"\/documentation\/parsing\/anyconversion","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"title":"AnyConversion","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"title":"Parsing","type":"topic","url":"\/documentation\/parsing","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","kind":"symbol","abstract":[{"text":"A library for turning nebulous data into well-structured data, with a focus on composition,","type":"text"},{"text":" ","type":"text"},{"text":"performance, generality, and ergonomics.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/parsing\/anyconversion\/init(_:)","role":"symbol","kind":"symbol","title":"init(_:)","abstract":[{"text":"Creates a type-erasing conversion to wrap the given conversion.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/init(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/init(apply:unapply:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)","role":"symbol","title":"init(apply:unapply:)","url":"\/documentation\/parsing\/anyconversion\/init(apply:unapply:)","type":"topic","abstract":[{"text":"Creates a conversion that wraps the given closures in its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","isActive":true,"type":"reference"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"methods, throwing an error when ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/unapply(_:)":{"url":"\/documentation\/parsing\/anyconversion\/unapply(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","abstract":[],"role":"symbol","title":"unapply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"type":"topic","title":"Conversion","abstract":[],"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/conversion"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/apply(_:)":{"url":"\/documentation\/parsing\/anyconversion\/apply(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","abstract":[],"role":"symbol","title":"apply(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/Conversion-Implementations":{"url":"\/documentation\/parsing\/anyconversion\/conversion-implementations","kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/Conversion-Implementations","abstract":[],"role":"collectionGroup","title":"Conversion Implementations"}}}